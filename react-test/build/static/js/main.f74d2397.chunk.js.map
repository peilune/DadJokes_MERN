{"version":3,"sources":["actions/jokeActions.js","actions/types.js","components/favorites.js","components/hello.js","components/welcome.js","components/navBar.js","components/jokeModal.js","components/saved.js","reducers/jokeReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["addJoke","joke","dispatch","axios","post","then","res","type","payload","data","setJokesLoading","Favorites","props","jokes","useSelector","state","useDispatch","text","Button","variant","onClick","getJoke","find","id","alert","Hello","Welcome","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavBar","classes","React","useState","anchorEl","setAnchorEl","handleClose","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","aria-controls","aria-haspopup","event","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","to","Typography","rand","Math","round","random","getModalStyle","top","left","transform","paper","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","margin","JokeModal","modalStyle","setOpen","name","setState","body","style","noValidate","autoComplete","onSubmit","e","preventDefault","newJoke","TextField","onChange","target","value","size","label","Modal","aria-labelledby","aria-describedby","Saved","useEffect","get","console","log","map","key","_id","delete","initialState","loading","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","setJokes","fetchJokes","a","headers","Container","maxWidth","exact","path","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f74d2397.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {GET_JOKES, ADD_JOKE, DELETE_JOKE, JOKES_LOADING} from './types';\r\n\r\nexport const getJokes = () => dispatch => {\r\n/*     return {\r\n        type: GET_JOKES\r\n    }; */\r\n    dispatch(setJokesLoading());\r\n    axios\r\n        .get('../api/jokes')\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_JOKES,\r\n                payload: res.data\r\n            }))\r\n};\r\n\r\nexport const deleteJoke = (id) => dispatch => {\r\n/*     return {\r\n        type: DELETE_JOKE,\r\n        payload: id\r\n    }; */\r\n    axios\r\n        .delete(`../api/jokes/${id}`)\r\n        .then(res => dispatch({\r\n            type: DELETE_JOKE,\r\n            payload: id\r\n        }))\r\n}\r\n\r\nexport const addJoke = (joke) => dispatch =>{\r\n/*     return {\r\n        type: ADD_JOKE,\r\n        payload: joke\r\n    }; */\r\n    axios\r\n        .post('../api/jokes', joke)\r\n        .then(res => dispatch({\r\n            type: ADD_JOKE,\r\n            payload: res.data\r\n        }))\r\n}\r\n\r\nexport const setJokesLoading = () => {\r\n    return {\r\n        type: JOKES_LOADING\r\n    }\r\n}","export const GET_JOKES = 'GET_JOKES';\r\nexport const ADD_JOKE = 'ADD_JOKE';\r\nexport const DELETE_JOKE = 'DELETE_JOKE';\r\nexport const JOKES_LOADING = 'JOKES_LOADING';","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport { addJoke } from '../actions/jokeActions';\r\n//import Saved from './saved';\r\n\r\n\r\nfunction Favorites(props) {\r\n    \r\n    const jokes = useSelector(state => state.joke)\r\n    const dispatch = useDispatch();\r\n\r\n/*     console.log(props);\r\n    const tableRecord = [];\r\n    props.stateInfo.forEach((state) => {\r\n        const tr =(\r\n        <tr>\r\n          <th>{state.stateInfo}</th>\r\n        </tr>);\r\n        tableRecord.push(tr);\r\n    }); */\r\n\r\n    /* {props.text.map(jar => <h3>{jar.joker}</h3>)} */\r\n\r\n/*       const [saved, setSaved] = useState ([\r\n      {\r\n          id: 0,\r\n          joke:  \"joke 1\",\r\n      },\r\n      {   id: 1,\r\n          joke: \"joke 2\",\r\n      },\r\n      {   id: 2,\r\n          joke: \"joke 3\",\r\n      }, \r\n  ]\r\n)  */\r\n\r\n/*    function addJokes(name) {\r\n      setSaved([...saved, {id: name.idvalue, joke: name.joke}]);\r\n  } */\r\n    \r\n\r\n    return (\r\n        <div>\r\n                {/*Displays the joke from api using properties from app.js*/}\r\n           <h1>{props.text.joke}</h1> \r\n\r\n                {/*Refresh Button using function from app.js*/}\r\n            <Button variant=\"outlined\" onClick={() =>{props.getJoke()}}> More Jokes without Refresh!</Button> <br/> <br/>\r\n\r\n                {/*When clicking this button, it will add the data to a list*/}\r\n           <Button variant=\"outlined\" onClick={() => { \r\n               if(!jokes.jokes.find(joke => joke.id === props.text.id)) {\r\n               {dispatch(addJoke(props.text))}\r\n               }\r\n/*                 const name = props.text.joke;\r\n                const id =  props.text.id;\r\n                {props.addJoke(id, name)} */\r\n            }}\r\n            >What a Hit!</Button>\r\n\r\n               {/*Button when clicked will pop up an alert*/}\r\n            <Button variant=\"outlined\" onClick={() => { alert(\"Add this to jokes I don't like\") }}>Booooo!</Button>\r\n\r\n               {/*Button when clicked will pop up an alert*/}\r\n            <Button variant=\"outlined\" onClick={() => { alert(\"Add this to jokes I don't understand\") }}>Please Explain!</Button>\r\n               \r\n        </div>\r\n    );\r\n}\r\nexport default Favorites;\r\n","import React from 'react';\r\nfunction Hello() {\r\n    return <h2>Hello World-Hello</h2>;\r\n}\r\nexport default Hello;\r\n","import React from 'react';\r\nfunction Welcome() {\r\n    return <h2>Hello World - Welcome</h2>;\r\n}\r\nexport default Welcome;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(-2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction NavBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n            <MenuIcon /> \r\n            </IconButton>\r\n            <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}>\r\n              <MenuItem onClick={handleClose}>\r\n                <Link to =\"/home\">Home</Link>\r\n              </MenuItem>\r\n            <MenuItem onClick={handleClose}>\r\n              <Link to=\"/favorites\">Favorites</Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose}>\r\n              <Link to=\"/dislike\">Dislike</Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose}>\r\n              <Link to=\"/confused\">Confused</Link>\r\n            </MenuItem>\r\n            </Menu>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n            Dad Jokes For You!\r\n          </Typography>\r\n          {/*<Button color=\"inherit\">Button Here</Button> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addJoke } from '../actions/jokeActions';\r\nimport TextField from '@material-ui/core/TextField';\r\n/* import { v4 as uuidv4 } from 'uuid' */\r\n\r\n\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n    root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function JokeModal() {\r\n\r\nconst jokes = useSelector(state => state.joke)\r\nconst dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = useState(\r\n      {name: ''}\r\n  );\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n      setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault();\r\n      const newJoke = {\r\n/*         id: uuidv4(), */\r\n        joke: state.name\r\n      };\r\n      \r\n      // Add joke with addJoke\r\n      dispatch(addJoke(newJoke));\r\n\r\n      //Close modal\r\n      handleClose();\r\n  }\r\n\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Add to Favorites</h2>\r\n      <p id=\"simple-modal-description\">\r\n        ^.^\r\n        </p>\r\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit= {handleSubmit}>\r\n            <TextField onChange={handleChange} name=\"name\" size= \"small\" id=\"outlined-basic\" label=\"Enter your Joke\" variant=\"outlined\" />\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        Add Your Own Joke!\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {v4 as uuidv4} from 'uuid';\r\n/* import { connect } from 'react-redux'; */\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getJokes, deleteJoke } from '../actions/jokeActions';\r\nimport JokeModal from './jokeModal';\r\n/* import PropTypes from 'prop-types'; */\r\n\r\nfunction Saved () {\r\n\r\n    const jokes = useSelector(state => state.joke);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getJokes())\r\n    }, []);\r\n\r\n    console.log(jokes);\r\n    return (\r\n        <div>\r\n             <h1>Hi! Here are your saved favorites!</h1>\r\n{/*                 <button onClick={() => dispatch(getJokes())}>push</button> */}\r\n                  \r\n                    {/*displays each joke in a list*/}\r\n                    {jokes.jokes.map((joke) => (\r\n                    <div key = {joke._id}>\r\n                        <Button onClick= {() => {\r\n                        {dispatch(deleteJoke(joke._id))}\r\n                        }}>x</Button>\r\n                        {joke.joke}\r\n                    </div>\r\n                    ))}\r\n                    <JokeModal/>\r\n\r\n{/*                 {props.saved.map(({ id, joke }) => (\r\n                    <h3 key = {id}>\r\n\r\n                    <Button onClick={() => {\r\n                        props.delete(id, joke)\r\n                    }}\r\n                    >x</Button>\r\n                    {joke} </h3>\r\n                ))} */}\r\n\r\n\r\n\r\n{/*         <Button variant=\"outlined\" onClick={() => {\r\n            const name = prompt(\"Enter your joke\")\r\n            const id = uuidv4();\r\n                if (name) {\r\n                     props.addJoke(id, name);\r\n                }\r\n        }}>Add your own Favorite</Button> */}\r\n\r\n        </div>\r\n    ) \r\n}\r\n\r\n/*  Saved.propTypes = {\r\n    getJokes: PropTypes.func.isRequired,\r\n    joke: PropTypes.object.isRequired\r\n} */\r\n\r\n\r\n/* const mapStateToProps = (state) => ({\r\n    joke: state.joke\r\n}); \r\n\r\nexport default connect(mapStateToProps, { getJokes, deleteJokes }) (Saved); */\r\n\r\nexport default Saved;\r\n","import {v4 as uuidv4} from 'uuid';\r\nimport {GET_JOKES, ADD_JOKE, DELETE_JOKE, JOKES_LOADING} from '../actions/types'\r\n\r\nconst initialState = {\r\n    jokes: [],\r\n    loading: false \r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_JOKES:\r\n            return {\r\n                ...state,\r\n                jokes: action.payload,\r\n                loading: false\r\n            }\r\n        case DELETE_JOKE:\r\n            return {\r\n               ...state,\r\n               jokes: state.jokes.filter(joke => joke._id !== action.payload) \r\n            };\r\n\r\n        case ADD_JOKE:\r\n            return {\r\n                ...state,\r\n                jokes:\r\n                    [action.payload, ...state.jokes]\r\n                \r\n            };\r\n\r\n        case JOKES_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport jokeReducer from './jokeReducer';\r\n\r\nexport default combineReducers ({\r\n    joke: jokeReducer\r\n})","import { createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n     window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\r\n));\r\n\r\nexport default store;","import React, { useState, useEffect } from 'react';\r\n//import Button from '@material-ui/core/Button';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport Favorites from './components/favorites';\r\nimport Hello from './components/hello';\r\nimport Welcome from './components/welcome';\r\nimport axios from 'axios';\r\nimport Container from '@material-ui/core/Container';\r\nimport NavBar from './components/navBar';\r\nimport Saved from './components/saved';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\n\r\n//const Todo = ({ todo }) => <div className=\"todo\">{todo.text}</div>;\r\n\r\n\r\nfunction App() {\r\n\r\n    const [jokes, setJokes] = useState([\r\n    ]);\r\n\r\n\r\n/*     const [saved, setSaved] = useState ([\r\n        {\r\n            id: \"0\",\r\n            joke:  \"joke 1\",\r\n        },\r\n        {   id: \"1\",\r\n            joke: \"joke 2\",\r\n        },\r\n        {   id: \"2\",\r\n            joke: \"joke 3\",\r\n        }, \r\n    ]);  */\r\n\r\n/*     const addJokes = (id, joke) => {\r\n        if(!saved.find(joke => joke.id === id)){\r\n        setSaved([...saved, {id: id, joke: joke}]);\r\n        }\r\n    } */\r\n\r\n    /*          saved.push({id: id, joke: joke});\r\n        setSaved(saved); */\r\n\r\n/*     const deleteJokes = (id) => {\r\n        setSaved(saved.filter(saved => saved.id !== id))\r\n    } */\r\n\r\n          /*    _.pullAllWith(saved, [{id: id, joke: joke}], _.isEqual);\r\n        console.log('delete joke --- ', saved) \r\n        setSaved(saved); */\r\n\r\n\r\n/*     const deleteAllJokes = () => {\r\n        setSaved([]);\r\n    } */\r\n\r\n    const fetchJokes = async () => {\r\n        const jokes = await axios.get('https://icanhazdadjoke.com', {\r\n            headers: {\r\n                'Accept' : 'application/json'\r\n            }});\r\n        setJokes(jokes.data);\r\n    }\r\n\r\n\r\n    //const [joke, setJoke] = useState(false);\r\n    //const [stateInfo, setStateInfo] = useState(false);\r\n    //Get request for Covid data in a day\r\n    // axios.get('https://covidtracking.com/api/v1/states/current.json').then((res) => {\r\n    //     console.log(res.data);\r\n    //     setStateInfo(res.data);\r\n    // });\r\n/*     useEffect(() => {\r\n        axios.get('https://covidtracking.com/api/v1/states/current.json').then((res) => {\r\n            console.log(res.data);\r\n            setStateInfo(res.data);\r\n        });\r\n    }, []); */\r\n\r\n    //GET Dad Joke \r\n\r\n    useEffect(() => {\r\n/*     axios.get('https://icanhazdadjoke.com', {\r\n        headers: {\r\n            'Accept' : 'application/json'\r\n        }\r\n    })\r\n    .then((res) => {\r\n        setJokes(res.data);\r\n    }); */\r\n        fetchJokes();\r\n    }, []);\r\n\r\n    return (\r\n        <Provider store={store}>\r\n        <Router>\r\n            <Container>\r\n                <div className='App'>\r\n                    <NavBar />\r\n                    <Container maxWidth=\"sm\">\r\n{/*                                  <Saved \r\n                                    save = {saved}\r\n                                    delete = {deleteJokes}/>\r\n\r\n                                    <button onClick={()=>{deleteAllJokes()}}>Delete All</button>\r\n */}\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <Redirect to=\"/home\" />\r\n                            </Route>\r\n\r\n                            <Route exact path=\"/home\">\r\n                                <Favorites \r\n                                    text = {jokes} \r\n                                    getJoke={fetchJokes} \r\n                                    /* addJoke={addJokes} */\r\n                                    />\r\n                            </Route>\r\n\r\n                            <Route exact path=\"/favorites\">\r\n                                <Saved \r\n                                    /* save = {saved} */\r\n                                    /* delete = {deleteJokes} */\r\n                                    /* addJoke = {addJokes} */\r\n                                    />\r\n                            </Route>\r\n\r\n                            <Route path=\"/dislike\">\r\n                                <Hello />\r\n                            </Route>\r\n\r\n                            <Route path=\"/confused\">\r\n                                <Welcome />\r\n                            </Route>\r\n                        </Switch>\r\n\r\n                    </Container>\r\n                </div>\r\n            </Container>\r\n        </Router>\r\n        </Provider>\r\n    \r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}